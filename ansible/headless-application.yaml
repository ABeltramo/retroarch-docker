---
# https://games-on-whales.github.io/gow/index.html
- name: Install Games on Whales
  hosts: all
  gather_facts: true
  vars:
    uinput_location: "/dev/uinput"
    file_location_dst_edid: "/etc/edid.txt"
    file_location_xorg_screen_config: "/etc/xorg-screen.conf"
    file_location_sunshine_conf: "{{ dir_repos_gow }}/images/sunshine/configs/sunshine.conf"
    file_location_headless_env: "{{ dir_repos_gow }}/env/headless.env"
    file_location_user_env: "{{ dir_repos_gow }}/user.env"
    use_display_device: "DP-0"
    user_env_sunshine_local_state: "{{ dir_home }}/gow"
    file_location_src_headless_yaml: "../compose/platforms/headless.yml"
    file_location_dst_headless_yaml: "{{ dir_repos_gow }}/compose/platforms/headless.yml"
    service_file_name: gow.service
    file_location_service: /etc/systemd/system/gow.service
  tasks:
    - name: Prerequisite checks
      block:
      - name: "Check if {{ uinput_location }} exists"
        stat: 
          path: "{{ uinput_location }}"
        register: stat_result
      - name: "Fail if {{ uinput_location }} not present"
        fail:
        when: not stat_result.stat.exists

    - name: GOW local_state dir creation
      block:
      - name: Cleanup GOW local_state dir
        file:
          path: "{{ user_env_sunshine_local_state }}"
          state: absent
        when: sunshine_local_state_cleanup

      - name: Create GOW local_state dir  
        file:
          path: "{{ user_env_sunshine_local_state }}"
          state: directory
          mode: '0777'

    - name: Clone GOW repository from github
      include_tasks: tasks-clone-git-repo.yaml
      vars:
        repo_dir:  "{{ dir_repos_gow }}"
        repo_link:  https://github.com/games-on-whales/gow.git

    - name: Headless monitor configuration
      # https://games-on-whales.github.io/gow/monitor.html
      block:
      - name: "Copy over EDID file from local:{{ file_location_src_edid }} to remote:{{ file_location_dst_edid }}"
        become: True
        copy:
          src: "{{ file_location_src_edid }}"
          dest: "{{ file_location_dst_edid }}"
      
      - name: Create Xorg screen config
        become: True
        copy:
          dest: "{{ file_location_xorg_screen_config }}"
          content: |
            Section "Screen"
                Identifier     "Screen0"
                Device         "Device0"
                Monitor        "Monitor0"
                DefaultDepth    24
                Option         "AllowEmptyInitialConfiguration" "True"
                Option         "UseDisplayDevice" "{{ use_display_device }}"
                Option         "CustomEDID" "{{ use_display_device }}:/home/retro/edid.txt"
                Option         "ConnectedMonitor" "{{ use_display_device }}"
                SubSection     "Display"
                    Depth       24
                EndSubSection
            EndSection

      - name: Update docker configuration to see new EDID and xorg-screen.conf files
        block:
        - name: "Include {{ file_location_src_headless_yaml }} as a dict"
          include_vars:
            file: "{{ file_location_src_headless_yaml }}"
            name: headless_yml

        - name: "Add lines for new config to {{ file_location_src_headless_yaml }} and write to {{ file_location_dst_headless_yaml }}"
          copy:
            dest: "{{ file_location_dst_headless_yaml }}"
            content: |
              {{ headless_yml_new | to_nice_yaml }}
            
          vars:
            additional_data:
              services:
                xorg:
                  volumes:
                    - "{{ file_location_dst_edid }}:/home/retro/edid.txt:ro"
                    - "{{ file_location_xorg_screen_config }}:/usr/share/X11/xorg.conf.d/01-xorg-screen.conf:ro"
            headless_yml_new: "{{ headless_yml | combine(additional_data, list_merge='append', recursive=true) }}"

      - name: "Edit '{{ file_location_headless_env }}' file to update XORG_DISPLAY_PORT to be '{{ use_display_device }}'"
        lineinfile: 
          path: "{{ file_location_headless_env }}"
          regexp: '^XORG_DISPLAY_PORT=(.*)$' 
          line: 'XORG_DISPLAY_PORT={{ use_display_device }}'
          backrefs: yes

      - name: "Edit '{{ file_location_sunshine_conf }}' file to update origin_web_ui_allowed to be '{{ sunshine_conf_origin_web_ui_allowed }}'"
        blockinfile: 
          path: "{{ file_location_sunshine_conf }}"
          block: |
            origin_web_ui_allowed = {{ sunshine_conf_origin_web_ui_allowed }}

      - name: "Copy {{ file_location_sunshine_conf }} to {{ user_env_sunshine_local_state }}/sunshine/"
        copy:
          remote_src: true
          src: "{{ file_location_sunshine_conf }}"
          dest: "{{ user_env_sunshine_local_state }}/sunshine/"
          directory_mode: '0777'
          mode: '0777'

    - name: Basic configuration
      # https://games-on-whales.github.io/gow/configuration.html
      block:    
      - name: "Edit '{{ file_location_user_env }}' file to update local_state to be '{{ user_env_sunshine_local_state }}'"
        lineinfile: 
          path: "{{ file_location_user_env }}"
          regexp: '^local_state=(.*)$' 
          line: 'local_state={{ user_env_sunshine_local_state }}'
          backrefs: yes
    
      - name: "Edit '{{ file_location_user_env }}' file to update TIME_ZONE to be '{{ user_env_time_zone }}'"
        lineinfile: 
          path: "{{ file_location_user_env }}"
          regexp: '^TIME_ZONE=(.*)$' 
          line: 'TIME_ZONE={{ user_env_time_zone }}'
          backrefs: yes

    - include_tasks: tasks-allow-ports.yaml
      vars:
        ports: 
          - "47984/tcp"
          - "47985/tcp"
          - "47986/tcp"
          - "47987/tcp"
          - "47988/tcp"
          - "47989/tcp"
          - "47990/tcp"
          - "48010/tcp"
          - "48010/udp"
          - "47998/udp"
          - "47999/udp"
          - "48000/udp"
    - name: Setup and enable systemd service
      block:
        - name: Copy over the service file for systemd
          become: true
          copy:
            src: configs/{{ service_file_name }}
            dest: "{{ file_location_service }}"

        - name: "Service file edit: Add command to start minikube"
          become: true  
          lineinfile: 
            path: "{{ file_location_service }}"
            regexp: '^WorkingDirectory=(.*)$' 
            line: 'WorkingDirectory={{ dir_repos_gow }}'
            backrefs: yes

        - name: "Service file edit: Add command to start minikube"
          become: true  
          lineinfile: 
            path: "{{ file_location_service }}"
            regexp: '^ExecStartPre=(.*)$' 
            line: 'ExecStartPre={{ dir_repos_gow }}/run-gow --platform headless --app {{ application }} pull'
            backrefs: yes

        - name: "Service file edit: Add reverse proxy script"
          become: true  
          lineinfile: 
            path: "{{ file_location_service }}"
            regexp: '^ExecStart=(.*)$' 
            line: "ExecStart={{ dir_repos_gow }}/run-gow --platform headless --app {{ application }} up"
            backrefs: yes

        - name: "Service file edit: Change User to be {{ ansible_user }}"
          become: True
          # https://gist.github.com/drmalex07/c0f9304deea566842490
          lineinfile:
            path: "{{ file_location_service }}"
            regexp: '^User=(.*)$'
            line: "User={{ ansible_user }}"
            backrefs: yes

        - name: Reload systemd service
          include_tasks: tasks-reload-systemd-service.yaml
          vars:
            service_name: "{{ service_file_name }}"
            become: True
    - name: End info
      debug:
        msg: "You can access Sunshine's web UI at 'https://{{ ansible_host }}:47990' and login using admin/admin (dont forget to change this) to approve of pins"