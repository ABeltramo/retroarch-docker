version: "3.9"

services:

  ##########################################
  # There's a lot going on in this file, 
  # it's normal to get lost with all the options and variables 
  #
  # Before diving in, make sure to take a look at the documentation.
  # in particular read the components-overview section (https://github.com/games-on-whales/gow/blob/master/docs/components-overview.md)
  # in order to get a view on how the components are tied together
  ####################  


  ####################
  # If you don't have a desktop environment we have to run Xorg
  xorg:
    build: 
      context: ./images/
      dockerfile: xorg/Dockerfile
    image: gameonwhales/xorg
    network_mode: host # Needed by uinput
    privileged: true
    volumes: 
      # Shared with Sunshine in order to get mouse and joypad working
      - /dev/input:/dev/input:ro
      - /run/udev:/run/udev:ro
      # If you don't pass this it complains (but it runs anyway?) so probably it's not strictly needed
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket
      # The xorg socket, it'll be populated when up and running
      - xorg:/tmp/.X11-unix
    ipc: shareable # Needed for MIT-SHM, removing this should cause a performance hit see https://github.com/jessfraz/dockerfiles/issues/359
    environment: 
      DISPLAY: ${DISPLAY}

  ####################
  # If you don't have a pulse server start it
  pulse:
    depends_on: 
      - xorg
    build: 
      context: ./images/
      dockerfile: pulseaudio/Dockerfile
    image: gameonwhales/pulseaudio
    ports: 
      - 4713:4713
    volumes:
      # If you don't pass this it complains (but it runs anyway?) so probably it's not strictly needed
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket
      # Xorg socket needed since we are publish to X11 so the clients know how to connect to Pulse
      - xorg:/tmp/.X11-unix
      # This will hold cookies so that we can connect to it using auth
      - ${local_state}/.config/pulse:/home/retro/.config/pulse
    environment: 
      DISPLAY: ${DISPLAY}
  
  ####################
  sunshine:
    depends_on: 
      - xorg
      - pulse
    build: 
      context: ./images/
      dockerfile: sunshine/Dockerfile
    image: gameonwhales/sunshine
    network_mode: host
    privileged: true
    volumes: 
      # Followings are needed by Sunshine to create and manage virtual devices (mouse, joypad, ...)
      - /run/udev:/run/udev:ro
      # Xorg socket in order to get the screen
      - xorg:/tmp/.X11-unix
      # Home directory: sunshine state + configs
      - ${local_state}/:/home/retro/
    ipc: service:xorg  # Needed for MIT-SHM, removing this should cause a performance hit see https://github.com/jessfraz/dockerfiles/issues/359
    environment: 
      DISPLAY: ${DISPLAY}
      LOG_LEVEL: info # Set to debug or verbose if you want to see more
      # Username and password for the web-ui at https://xxx.xxx.xxx.xxx:47990 
      SUNSHINE_USER: admin
      SUNSHINE_PASS: admin
      # Using network in order to connect to pulse 
      # if you do have a pulse server already point this to the pulse socket like unix:/tmp/pulse-sock
      # and mount the host socket to the instance
      PULSE_SERVER: 127.0.0.1
      
      
  ####################
  retroarch:
    depends_on: 
      - xorg
      - pulse
      - sunshine
    # runtime: nvidia
    # restart: on-failure
    build: 
      context: ./images/
      dockerfile: retroarch/Dockerfile
    image: gameonwhales/retroarch
    network_mode: host
    privileged: true
    volumes: 
      # Followings are needed in order to get joystick support
      - /dev/input:/dev/input:ro
      - /run/udev:/run/udev:ro
      # Xorg socket in order to get the screen
      - xorg:/tmp/.X11-unix
      # Home directory: retroarch games, downloads, cores etc
      - ${local_state}/:/home/retro/
    ipc: service:xorg  # Needed for MIT-SHM, removing this should cause a performance hit see https://github.com/jessfraz/dockerfiles/issues/359
    environment: 
      DISPLAY: ${DISPLAY}
      NVIDIA_DRIVER_CAPABILITIES: utility,video,graphics,display
      NVIDIA_VISIBLE_DEVICES: ${GPU_UUID}
      LOG_LEVEL: info # Set to debug or verbose if you want to see more
      # Which devices does GoW need to be able to use? The docker user will be
      # added to the groups that own these devices, to help with permissions
      # issues
      # These values are the defaults, but you can add others if needed
      # GOW_REQUIRED_DEVICES: /dev/uinput /dev/input/event*
      # Using network in order to connect to pulse 
      # if you do have a pulse server already point this to the pulse socket like unix:/tmp/pulse-sock
      # and mount the host socket to the instance
      PULSE_SERVER: 127.0.0.1

  # ####################
  # An example of running an unprivileged X11 app in this environment
  # firefox:
  #   depends_on: 
  #     - xorg
  #     - pulse
  #     - sunshine
  #   image: andrewmackrodt/firefox-x11
  #   volumes:       
  #     - xorg:/tmp/.X11-unix
  #     # If you have permission errors make sure to chomd ${id}:${id} ./local_state
  #     - ${local_state}/ffox:/run/user/1000
  #     - ${local_state}/.config/pulse:/home/ubuntu/.config/pulse:ro
  #   environment: 
  #     DISPLAY: ":0"
  #     LOG_LEVEL: info
  #     PULSE_SERVER: pulse # The name of the pulse container is the hostname in the virtual network


####################
volumes:
  xorg: # This will hold the xorg socket file and it'll be shared between containers
